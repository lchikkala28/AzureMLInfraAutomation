name: 'Terraform'

on:
  push:
    branches:       
      - main

permissions:
  contents: read

jobs:
  terraform_dev:
    name: 'Terraform Dev'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VERSION: 1.5.7
    runs-on: ubuntu-latest
    environment: dev

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Initialize Terraform working directory with the dev backend configuration
    - name: Terraform Init (Dev)
      working-directory: ./src
      run: terraform init -backend-config=env/dev-backend.hcl

    # Check Terraform formatting
    - name: Terraform Format
      working-directory: ./src
      run: terraform fmt -check

    # Generate Terraform execution plan (Dev)
    - name: Terraform Plan (Dev)
      working-directory: ./src
      run: terraform plan -input=false -var-file=env/dev-terraform.tfvars
    
        # On push to "dev", apply Terraform changes for prod 
    - name: Terraform Apply (dev)
      working-directory: ./src
      run: terraform destroy -auto-approve -input=false -var-file=env/dev-terraform.tfvars

  terraform_prod:
    name: 'Terraform Prod'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_VERSION: 1.5.7
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
    needs: terraform_dev

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    # Initialize Terraform working directory with the prod backend configuration
    - name: Terraform Init (Prod)
      working-directory: ./src
      run: terraform init -backend-config=env/prd-backend.hcl

    # Check Terraform formatting
    - name: Terraform Format
      working-directory: ./src
      run: terraform fmt -check

    # Generate Terraform execution plan (Prod)
    - name: Terraform Plan (Prod)
      working-directory: ./src
      run: terraform plan -input=false -var-file=env/prd-terraform.tfvars

    # On push to "main", apply Terraform changes for prod
    - name: Terraform Apply (Prod)
      working-directory: ./src
      run: terraform destroy -auto-approve -input=false -var-file=env/prd-terraform.tfvars

